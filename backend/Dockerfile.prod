# Build stage
FROM maven:3.9.5-eclipse-temurin-17 as build

WORKDIR /app

# Copy pom.xml for dependency resolution
COPY pom.xml .

# Download dependencies
RUN mvn dependency:go-offline -B

# Copy source code
COPY src src

# Build the application with production profile
RUN mvn clean package -DskipTests -Pproduction

# Runtime stage
FROM eclipse-temurin:17-jre

WORKDIR /app

# Install curl for health check and security updates
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create necessary directories
RUN mkdir -p /app/uploads/games /app/logs

# Copy the built JAR from build stage
COPY --from=build /app/target/*.jar app.jar

# Create non-root user for security
RUN addgroup --system --gid 1001 springboot && \
    adduser --system --uid 1001 --gid 1001 springboot && \
    chown -R springboot:springboot /app && \
    chmod -R 755 /app

# Set proper file permissions
RUN chmod 755 /app/app.jar && \
    chown -R springboot:springboot /app/uploads && \
    chown -R springboot:springboot /app/logs

USER springboot

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/api/actuator/health || exit 1

# JVM production optimizations
ENV JAVA_OPTS="-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/./urandom"

# Run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar /app/app.jar"] 